---
model:
  githubAccount: github-account-fixme
  projectName: project-name-fixme
  copyright:
    holder: copyright-holder-fixme
    startYear: 2022
  license: BSD3
  project_yaml: script/data/project.yaml
  project_schema: './script/schema/project.schema.json'
  generate_sh: script/generate.sh
  colors:
    - green
    - orange
    - blue
  animals:
    - cat
    - dog
workflows:
  test:
    title: Test your library
    description: Test your library for defects
    tasks:
      generate:
        title: Generate code
        description: Generate code
        motivation: Generate code
        steps:
          - a: batch
            name: calculate
            title: Run calculate
            before:
              - a: get-property
                name: githubAccount
                title: Set variable githubAccount
                value: build.model.githubAccount
              - a: get-property
                name: githubAccount2
                title: Set variable githubAccount
                value: data.test::generate::githubAccount
            commands:
              - name: first
                title: First echo
                run: echo "First is {{data.status}} and {{data.test::generate::githubAccount}} and {{build.model.license}}"
              - name: second
                title: Second echo with task.name
                run: echo "Second {{task.name}}"
      color:
        title: Print some colors
        parameters:
          - description: Color
            flags: '-c, --color <type>'
          - description: decision
            flags: '-y, --yes'
        steps:
          - a: batch
            name: calculate
            title: Run calculate
            commands:
              - name: confirm-color
                title: Confirm color
                run: echo "Color is {{runtime.parameters.color}} and yes is {{runtime.parameters.yes}}"
              - name: check-yes
                title: Check if statement
                if: runtime.parameters.yes
                run: echo "if statement is printed"
              - name: always-no
                title: Check always no statement
                if: runtime.parameters.unknown
                run: echo "should never be printed"
      stdin:
        title: Check stdin
        description: Check stdin is working
        steps:
          - a: batch
            name: main
            title: Check std in
            commands:
              - name: code_of_conduct
                run: cat CODE_OF_CONDUCT.md
                onSuccess:
                  - save
              - name: head
                stdin: data.test::stdin::code_of_conduct
                run: head -n 5
      lint:
        title: Lint code
        description: Lint code
        steps:
          - a: batch
            name: list files
            title: List files
            commands:
              - name: list source files
                run: yarn lint
