name: CI
on:
  - push
jobs:
  build:
    name: Build, lint, and test on Node ${{ matrix.node }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node:
          - 22.x
        os:
          - macOS-latest
          - ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - name: Installation
        run: yarn install
      - name: Unit tests
        run: yarn test
      - name: Coverage (c8)
        run: yarn test:cov
      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          # Ensure unique artifact names per matrix job to avoid 409 conflicts
          name: coverage-lcov-${{ matrix.os }}-${{ matrix.node }}
          path: coverage/lcov.info
      - name: Create temp folder
        run: mkdir -p temp
      - name: Run pest integration tests
        run: |
          if [ -d "pest-spec" ]; then
            npx baldrick-broth@latest test pest
          else
            echo "No pest files. Skipping"
          fi
      - name: Build
        run: yarn build
      - name: Verify package entrypoints exist
        run: |
          set -euo pipefail
          echo "Extracting package entrypoint paths (bin/main/exports)..."
          PATHS=$(node - <<'NODE'
          const fs = require('fs');
          const pkg = JSON.parse(fs.readFileSync('package.json','utf8'));
          const out = new Set();
          if (typeof pkg.bin === 'string') out.add(pkg.bin);
          else if (pkg.bin && typeof pkg.bin === 'object') {
            for (const k of Object.keys(pkg.bin)) out.add(pkg.bin[k]);
          }
          if (typeof pkg.main === 'string') out.add(pkg.main);
          if (pkg.exports && typeof pkg.exports === 'object') {
            const dot = pkg.exports['.'];
            if (dot && typeof dot === 'object') {
              if (typeof dot.import === 'string') out.add(dot.import);
              if (typeof dot.default === 'string') out.add(dot.default);
              if (typeof dot.types === 'string') out.add(dot.types);
            }
          }
          console.log([...out].join('\n'));
          NODE
          )
          echo "Checking paths exist after build:"
          FAIL=0
          while IFS= read -r p; do
            [ -z "$p" ] && continue
            if [ -e "$p" ]; then
              echo "  ✓ $p"
            else
              echo "  ✗ Missing: $p" >&2
              FAIL=1
            fi
          done <<< "$PATHS"
          if [ "$FAIL" -ne 0 ]; then
            echo "Error: One or more package.json entrypoints are missing after build." >&2
            echo "Hint: Ensure tsconfig root/output settings match package.json bin/main/exports paths." >&2
            exit 1
          fi
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always() && hashFiles('report/*.pest.mocha.json') != ''
        continue-on-error: true
        with:
          name: Pest
          path: report/*.pest.mocha.json
          reporter: mocha-json
          fail-on-empty: false
          fail-on-error: false
